/* Mixins */

//Clearfix
.clearfix() {

	&:before,
	&:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}

	*zoom: 1;
}

//Show
.show() {
	display: block !important;
	visibility: visible !important;
	.opacity(1);
}

//Hide
.hide() {
	display: none !important;
	visibility: hidden !important;
	.opacity(0);
}

//Absolute Align
.absolute-align(@align, @margin, @length) when (@align = top) {
	top: @margin;
}

.absolute-align(@align, @margin, @length) when (@align = bottom) {
	bottom: @margin;
}

.absolute-align(@align, @margin, @length) when (@align = left) {
	left: @margin;
}

.absolute-align(@align, @margin, @length) when (@align = right) {
	right: @margin;
}

.absolute-align(@align, @margin, @length) when (@align = center) {
	left: 50%;
	margin-left: -(@length / 2);
}

.absolute-align(@align, @margin, @length) when (@align = middle) {
	top: 50%;
	margin-top: -(@length / 2);
}

.absolute-center(@width, @height) {
	position: absolute;
	top: 50%;
	left: 50%;
	margin-top: -(@height / 2);
	margin-left: -(@width / 2);
}

//Sizing
.size(@width; @height) {
	width: @width;
	height: @height;
}

//Square Sizing
.square(@size) {
	.size(@size; @size);
}

//Center Block
.center-block() {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

//Hide text
.hide-text() {
	font: ~"0/0" a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}
.text-hide() {
	.hide-text();
}

//Truncate
.truncate() {
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

//Overlay
.overlay() {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

//Hide but keep in DOM for Screen Readers
.hide-visually() {
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position:
	absolute;
	width: 1px;
}

//Column Count
.column-count(@count) {
	-webkit-column-count: @count;
	-moz-column-count: @count;
	column-count: @count;
}

//Column Gap
.column-gap(@gap) {
	-webkit-column-gap: @gap;
	-moz-column-gap: @gap;
	column-gap: @gap;
}

//Button
.button() {
	padding: @buttons_padding;
	font-size: @buttons_font_size;
	border: none;
	color: @dark;
	.border-radius(@buttons_border_radius);
	.transition(all @transition_fast ease-in-out);
	.transition-property(~"background, color");
}

//Button Grey
.button-grey() {
	color: @primary;
	background: @light_grey;

	&:hover {
		background: @grey;
		.transition(all @transition_fast ease-in-out);
		.transition-property(~"background, color");
	}
}

//Button Primary
.button-primary() {
	color: @white;
	background: @primary;

	&:hover {
		background: @grey;
		.transition(background @transition_fast ease-in-out);
		.transition-property(~"background, color");
	}
}

//Button Small
.button-small() {
	padding: @buttons_small_padding;
	font-size: @buttons_small_font_size;
}

//Button Medium
.button-medium() {
	padding: @buttons_padding;
	font-size: @buttons_font_size;
}

//Button Large
.button-large() {
	padding: @buttons_large_padding;
	font-size: @buttons_large_font_size;

	@media @medium {
		padding: @buttons_padding;
		font-size: @buttons_font_size;
	}
}

//Button Block
.button-block() {
	width: 100%;
	text-align: center;
	display: block;
}

//Button Action
.button-action() {
	position: relative;
	text-align: left;
	clear: both;

	&:after {
		float: right;
		position: absolute;
		right: 15px;
		top: 50%;
		margin-top: -6px;
		content: @icon_angle_right;
		color: @white;
		font-size: 12px;
		font-family: @icon_font_family;
		margin-left: 15px;
		.transition(all @transition_fast ease-in-out);
		.transition-property(~"background, color");
	}

	&:hover,
	&:focus {
		&:after {
			color: @white;
		}
	}
}


//Background Opacity
.background-color-with-alpha(@color, @alpha) {
	@rgba: rgba(red(@color), green(@color), blue(@color), @alpha);
	background-color: @color;
	background-color: @rgba;
}

//Box Shadow
.box-shadow(@shadow) {
	-webkit-box-shadow: @shadow;
	-moz-box-shadow: @shadow;
	-o-box-shadow: @shadow;
	box-shadow: @shadow;
}

//Border Radius
.border-radius (@radius: 5px) {
	-webkit-border-radius: @radius;
	-moz-border-radius: @radius;
	border-radius: @radius;
}

//Border Radiuses
.border-radiuses (@topleft: 5px, @topright: 5px, @bottomleft: 5px, @bottomright: 5px) {
	-webkit-border-radius: @topleft @topright @bottomright @bottomleft;
	-moz-border-radius: @topleft @topright @bottomright @bottomleft;
	border-radius: @topleft @topright @bottomright @bottomleft;
	.background-clip(padding-box);
}

//Opacity
.opacity(@opacity: 1) {
	-moz-opacity: @opacity !important;
	-khtml-opacity: @opacity !important;
	-webkit-opacity: @opacity !important;
	opacity: @opacity !important;
	@opperc: @opacity * 100;
	-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opperc})";
	filter: ~"alpha(opacity=@{opperc})";
}

//Border Box Sizing
.border-box-sizing() {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

//Content Box Sizing
.content-box-sizing() {
	-webkit-box-sizing: content-box;
	-moz-box-sizing: content-box;
	box-sizing: content-box;
}

//Background Clip
.background-clip(@argument: padding-box) {
  -moz-background-clip: @argument;
  -webkit-background-clip: @argument;
  background-clip: @argument;
}

//Gradient
.gradient(@start: @white, @start_origin: 0%, @stop: @black, @stop_origin: 100%) {
    background: @start;
	background: -moz-linear-gradient(top, @start @start_origin, @stop @stop_origin);
	background: -webkit-gradient(linear, left top, left bottom, color-stop(@start_origin, @start), color-stop(@stop_origin, @stop));
	background: -webkit-linear-gradient(top, @start @start_origin, @stop @stop_origin);
	background: -o-linear-gradient(top, @start @start_origin, @stop @stop_origin);
	background: -ms-linear-gradient(top, @start @start_origin, @stop @stop_origin);
	background: linear-gradient(to bottom, @start @start_origin, @stop @stop_origin);
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", @stop, @start));
}

//Horizontal Gradient
.horizontal-gradient(@start: @white, @start_origin: 0%, @stop: @black, @stop_origin: 100%) {
    background: @start;
	background: -moz-linear-gradient(left, @start @start_origin, @stop 100%);
	background: -webkit-gradient(linear, left top, right top, color-stop(@start_origin, @start), color-stop(@stop_origin, @stop));
	background: -webkit-linear-gradient(left, @start @start_origin, @stop @stop_origin);
	background: -o-linear-gradient(left, @start @start_origin, @stop @stop_origin);
	background: -ms-linear-gradient(left, @start @start_origin, @stop @stop_origin);
	background: linear-gradient(to right, @start @start_origin, @stop @stop_origin);
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)", @stop, @start));
}

//Radial Gradient
.radial-gradient(@start: @white, @start_origin: 0%, @stop: @black, @stop_origin: 100%) {
	background: -moz-radial-gradient(center, ellipse cover, @start @start_origin, @stop @stop_origin);
	background: -webkit-gradient(radial, center center, @start_origin, center center, @stop_origin, color-stop(@start_origin, @start), color-stop(@stop_origin, @stop));
	background: -webkit-radial-gradient(center, ellipse cover, @start @start_origin, @stop @stop_origin);
	background: -o-radial-gradient(center, ellipse cover, @start @start_origin, @stop @stop_origin);
	background: -ms-radial-gradient(center, ellipse cover, @start @start_origin, @stop @stop_origin);
	background: radial-gradient(ellipse at center, @start @start_origin, @stop @stop_origin);
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)", @stop, @start));
}

//Text Overflow
.text-overflow() {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

//User Select
.user-select(@argument: none) {
	-webkit-user-select: @argument;
	-moz-user-select: @argument;
	-ms-user-select: @argument;
	user-select: @argument;
}

// Retina images
.img-retina(@file_1x, @file_2x, @width_1x, @height_1x) {
	background-image: url("@{file_1x}");
	@media
	only screen and (-webkit-min-device-pixel-ratio: 2),
	only screen and (min--moz-device-pixel-ratio: 2),
	only screen and (-o-min-device-pixel-ratio: 2/1),
	only screen and (min-device-pixel-ratio: 2),
	only screen and (min-resolution: 192dpi),
	only screen and (min-resolution: 2dppx) {
		background-image: url("@{file_2x}");
		background-size: @width_1x @height_1x;
	}
}

//Placeholder
.placeholder(@color, @font_size, @font_family, @letter_spacing, @text_transform) {
	&:-moz-placeholder {
		color: @color;
		font-size: @font_size;
		font-family: @font_family;
		letter-spacing: @letter_spacing;
		text-transform: @text_transform;
		.transition(color 0.2s ease-in-out);
	}
	&:focus:-moz-placeholder {
		color: fade(@color, 25%);
	}
	&::-moz-placeholder {
		color: @color;
		font-size: @font_size;
		font-family: @font_family;
		letter-spacing: @letter_spacing;
		text-transform: @text_transform;
		.transition(color 0.2s ease-in-out);
	}
	&:focus::-moz-placeholder {
		color: fade(@color, 25%);
	}
	&:-ms-input-placeholder {
		color: @color;
		font-size: @font_size;
		font-family: @font_family;
		letter-spacing: @letter_spacing;
		text-transform: @text_transform;
		.transition(color 0.2s ease-in-out);
	}
	&:focus:-ms-input-placeholder {
		color: fade(@color, 25%);
	}
	&::-webkit-input-placeholder {
		color: @color;
		font-size: @font_size;
		font-family: @font_family;
		letter-spacing: @letter_spacing;
		text-transform: @text_transform;
		.transition(color 0.2s ease-in-out);
	}
	&:focus::-webkit-input-placeholder {
		color: fade(@color, 25%);
	}
}

//Transitions
.transition(@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

.transition-delay(@transition_delay) {
	-webkit-transition-delay: @transition_delay;
	-moz-transition-delay: @transition_delay;
	-ms-transition-delay: @transition_delay;
	-o-transition-delay: @transition_delay;
	transition-delay: @transition_delay;
}

.transition-property(@transition_property) {
	-webkit-transition-property: @transition_property;
	-moz-transition-property: @transition_property;
	-ms-transition-property: @transition_property;
	-o-transition-property: @transition_property;
	transition-property: @transition_property;
}

.transition-duration(@transition_duration) {
	-webkit-transition-duration: @transition_duration;
	-moz-transition-duration: @transition_duration;
	-ms-transition-duration: @transition_duration;
	-o-transition-duration: @transition_duration;
	transition-duration: @transition_duration;
}

.transition-transform(@transition) {
	-webkit-transition: -webkit-transform @transition;
	-moz-transition: -moz-transform @transition;
	-ms-transition: -ms-transform @transition;
	-o-transition: -o-transform @transition;
	transition: transform @transition;
}

//Transformations
.rotate(@degrees) {
	-webkit-transform: rotate(@degrees);
	-moz-transform: rotate(@degrees);
	-ms-transform: rotate(@degrees);
	-o-transform: rotate(@degrees);
	transform: rotate(@degrees);
}

.scale(@ratio, @ratio_y...) {
	-webkit-transform: scale(@ratio, @ratio_y);
	-moz-transform: scale(@ratio, @ratio_y);
	-ms-transform: scale(@ratio, @ratio_y);
	-o-transform: scale(@ratio, @ratio_y);
	transform: scale(@ratio, @ratio_y);
}

.translate(@x, @y) {
	-webkit-transform: translate(@x, @y);
	-moz-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y);
	-o-transform: translate(@x, @y);
	transform: translate(@x, @y);
}

.skew(@x, @y) {
	-webkit-transform: skew(@x, @y);
	-moz-transform: skew(@x, @y);
	-ms-transform: skewX(@x) skewY(@y);
	-o-transform: skew(@x, @y);
	transform: skew(@x, @y);
}

.translate3d(@x, @y, @z) {
	-webkit-transform: translate3d(@x, @y, @z);
	-moz-transform: translate3d(@x, @y, @z);
	-ms-transform: translate3d(@x, @y, @z);
	-o-transform: translate3d(@x, @y, @z);
	transform: translate3d(@x, @y, @z);
}

.translateX(@offset) {
	-webkit-transform: translateX(@offset);
	-moz-transform: translateX(@offset);
	-ms-transform: translateX(@offset);
	-o-transform: translateX(@offset);
	transform: translateX(@offset);
}

.translateY(@offset) {
	-webkit-transform: translateY(@offset);
	-moz-transform: translateY(@offset);
	-ms-transform: translateY(@offset);
	-o-transform: translateY(@offset);
	transform: translateY(@offset);
}

.translateZ(@offset) {
	-webkit-transform: translateZ(@offset);
	-moz-transform: translateZ(@offset);
	-ms-transform: translateZ(@offset);
	-o-transform: translateZ(@offset);
	transform: translateZ(@offset);
}

.rotateX(@degrees) {
	-webkit-transform: rotateX(@degrees);
	-moz-transform: rotateX(@degrees);
	-ms-transform: rotateX(@degrees);
	-o-transform: rotateX(@degrees);
	transform: rotateX(@degrees);
}

.rotateY(@degrees) {
	-webkit-transform: rotateY(@degrees);
	-moz-transform: rotateY(@degrees);
	-ms-transform: rotateY(@degrees);
	-o-transform: rotateY(@degrees);
	transform: rotateY(@degrees);
}

.perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	-ms-perspective: @perspective;
	-o-perspective: @perspective;
	perspective: @perspective;
}

.perspective-origin(@perspective) {
	-webkit-perspective-origin: @perspective;
	-moz-perspective-origin: @perspective;
	-ms-perspective-origin: @perspective;
	-o-perspective-origin: @perspective;
	perspective-origin: @perspective;
}

.transform-origin(@origin) {
	-webkit-transform-origin: @origin;
	-moz-transform-origin: @origin;
	-ms-transform-origin: @origin;
	-o-transform-origin: @origin;
	transform-origin: @origin;
}

//Animations
.animation(@animation) {
	-webkit-animation: @animation;
	-moz-animation: @animation;
	-ms-animation: @animation;
	-o-animation: @animation;
	animation: @animation;
}

.animation-name(@name) {
	-webkit-animation-name: @name;
	-moz-animation-name: @name;
	-ms-animation-name: @name;
	-o-animation-name: @name;
	animation-name: @name;
}

.animation-duration(@duration) {
	-webkit-animation-duration: @duration;
	-moz-animation-duration: @duration;
	-ms-animation-duration: @duration;
	-o-animation-duration: @duration;
	animation-duration: @duration;
}

.animation-timing-function(@timing_function) {
	-webkit-animation-timing-function: @timing_function;
	-moz-animation-timing-function: @timing_function;
	-ms-animation-timing-function: @timing_function;
	-o-animation-timing-function: @timing_function;
	animation-timing-function: @timing_function;
}

.animation-delay(@delay) {
	-webkit-animation-delay: @delay;
	-moz-animation-delay: @delay;
	-ms-animation-delay: @delay;
	-o-animation-delay: @delay;
	animation-delay: @delay;
}

.animation-iteration-count(@iteration_count) {
	-webkit-animation-iteration-count: @iteration_count;
	-moz-animation-iteration-count: @iteration_count;
	-ms-animation-iteration-count: @iteration_count;
	-o-animation-iteration-count: @iteration_count;
	animation-iteration-count: @iteration_count;
}

.animation-direction(@direction) {
	-webkit-animation-direction: @direction;
	-moz-animation-direction: @direction;
	-ms-animation-direction: @direction;
	-o-animation-direction: @direction;
	animation-direction: @direction;
}

//Filters

.filter-blur(@radius) {
	-webkit-filter: blur(@radius);
	-moz-filter: blur(@radius);
	-ms-filter: blur(@radius);
	-o-filter: blur(@radius);
}

.filter-sepia(@radius) {
	-webkit-filter: sepia(@radius);
	-moz-filter: sepia(@radius);
	-ms-filter: sepia(@radius);
	-o-filter: sepia(@radius);
}

.filter-hue-rotate(@radius) {
	-webkit-filter: hue-rotate(@radius);
	-moz-filter: hue-rotate(@radius);
	-ms-filter: hue-rotate(@radius);
	-o-filter: hue-rotate(@radius);
}

.filter-brightness(@amount) {
	-webkit-filter: brightness(@amount);
	-moz-filter: brightness(@amount);
	-ms-filter: brightness(@amount);
	-o-filter: brightness(@amount);
}

.filter-contrast(@percentage) {
	-webkit-filter: contrast(@percentage);
	-moz-filter: contrast(@percentage);
	-ms-filter: contrast(@percentage);
	-o-filter: contrast(@percentage);
}

.filter-invert(@percentage) {
	-webkit-filter: invert(@percentage);
	-moz-filter: invert(@percentage);
	-ms-filter: invert(@percentage);
	-o-filter: invert(@percentage);
}

.filter-saturate(@percentage) {
	-webkit-filter: saturate(@percentage);
	-moz-filter: saturate(@percentage);
	-ms-filter: saturate(@percentage);
	-o-filter: saturate(@percentage);
}